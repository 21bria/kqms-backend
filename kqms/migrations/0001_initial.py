# Generated by Django 4.2 on 2025-06-21 04:46

from decimal import Decimal
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='detailsDome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pile_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('dumping_point', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('compositing', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('dome_finish', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('status_dome', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('plan_ni_min', models.FloatField(blank=True, default=None, null=True)),
                ('plan_ni_max', models.FloatField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('direct_sale', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('id_dumping', models.BigIntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'db_table': 'dome_point_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='mineUnitsView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_code', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('unit_model', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('unit_type', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('supports', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('vendor_name', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'db_table': 'list_mine_units',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='mineVolumeAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, default=None, null=True)),
                ('date_end', models.DateField(blank=True, default=None, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('vendors', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('sources_area', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('loading_point', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('type_truck', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('material', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('bcm_original', models.FloatField(blank=True, default=None, null=True)),
                ('ton_original', models.FloatField(blank=True, default=None, null=True)),
                ('bcm_updated', models.FloatField(blank=True, default=None, null=True)),
                ('ton_updated', models.FloatField(blank=True, default=None, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'mine_volume_adjustment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssayMral',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('release_date', models.DateField(blank=True, default=None, null=True)),
                ('release_time', models.TimeField(blank=True, default=None, null=True)),
                ('release_mral', models.DateTimeField(blank=True, default=None, null=True)),
                ('job_number', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('sample_id', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('ni', models.FloatField(blank=True, default=None, null=True)),
                ('co', models.FloatField(blank=True, default=None, null=True)),
                ('fe2o3', models.FloatField(blank=True, default=None, null=True)),
                ('fe', models.FloatField(blank=True, default=None, null=True)),
                ('mgo', models.FloatField(blank=True, default=None, null=True)),
                ('sio2', models.FloatField(blank=True, default=None, null=True)),
                ('no_input', models.BigIntegerField(blank=True, default=None, null=True)),
                ('user_id', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'assay_mrals',
            },
        ),
        migrations.CreateModel(
            name='AssayRoa',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('release_date', models.DateField(blank=True, default=None, null=True)),
                ('release_time', models.TimeField(blank=True, default=None, null=True)),
                ('release_roa', models.DateTimeField(blank=True, default=None, null=True)),
                ('job_number', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('sample_id', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('ni', models.FloatField(blank=True, default=None, null=True)),
                ('co', models.FloatField(blank=True, default=None, null=True)),
                ('al2o3', models.FloatField(blank=True, default=None, null=True)),
                ('cao', models.FloatField(blank=True, default=None, null=True)),
                ('cr2o3', models.FloatField(blank=True, default=None, null=True)),
                ('fe2o3', models.FloatField(blank=True, default=None, null=True)),
                ('fe', models.FloatField(blank=True, default=None, null=True)),
                ('k2o', models.FloatField(blank=True, default=None, null=True)),
                ('mgo', models.FloatField(blank=True, default=None, null=True)),
                ('mno', models.FloatField(blank=True, default=None, null=True)),
                ('na2o', models.FloatField(blank=True, default=None, null=True)),
                ('p2o5', models.FloatField(blank=True, default=None, null=True)),
                ('p', models.FloatField(blank=True, default=None, null=True)),
                ('sio2', models.FloatField(blank=True, default=None, null=True)),
                ('tio2', models.FloatField(blank=True, default=None, null=True)),
                ('s', models.FloatField(blank=True, default=None, null=True)),
                ('cu', models.FloatField(blank=True, default=None, null=True)),
                ('zn', models.FloatField(blank=True, default=None, null=True)),
                ('ci', models.FloatField(blank=True, default=None, null=True)),
                ('so3', models.FloatField(blank=True, default=None, null=True)),
                ('loi', models.FloatField(blank=True, default=None, null=True)),
                ('total', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('wt_wet', models.FloatField(blank=True, default=None, null=True)),
                ('wt_dry', models.FloatField(blank=True, default=None, null=True)),
                ('mc', models.FloatField(blank=True, default=None, null=True)),
                ('p75um', models.FloatField(blank=True, default=None, null=True)),
                ('_5mm', models.FloatField(blank=True, default=None, null=True)),
                ('problem', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('no_input', models.BigIntegerField(blank=True, default=None, null=True)),
                ('user_id', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'assay_roas',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mine_block', models.CharField(max_length=50, unique=True)),
                ('keterangan', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'blocks',
            },
        ),
        migrations.CreateModel(
            name='DomeBalance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('opening_balance', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('total_in', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('total_out', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('closing_balance', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
            ],
            options={
                'db_table': 'balance_dome',
            },
        ),
        migrations.CreateModel(
            name='domeMerge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_dome', models.BigIntegerField(blank=True, default=None, null=True)),
                ('tonnage_primary', models.FloatField(blank=True, default=None, null=True)),
                ('dome_second', models.BigIntegerField(blank=True, default=None, null=True)),
                ('tonnage_second', models.FloatField(blank=True, default=None, null=True)),
                ('ref_id', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('remarks', models.TextField(blank=True, default=None, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'compositing_domes',
            },
        ),
        migrations.CreateModel(
            name='domeStatusClose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_dome', models.BigIntegerField(blank=True, default=None, null=True)),
                ('tonnage_dome', models.FloatField(blank=True, default=None, null=True)),
                ('status_dome', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('cek_duplicated', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'status_dome',
            },
        ),
        migrations.CreateModel(
            name='domeStatusFinish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_dome', models.BigIntegerField(blank=True, default=None, null=True)),
                ('tonnage_dome', models.FloatField(blank=True, default=None, null=True)),
                ('status_dome', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('cek_duplicated', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'status_dome_finish',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_material', models.CharField(max_length=50, unique=True)),
                ('keterangan', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'materials',
            },
        ),
        migrations.CreateModel(
            name='mineAdditionFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_truck', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('material', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('tf_bcm', models.FloatField(blank=True, default=None, null=True)),
                ('tf_ton', models.FloatField(blank=True, default=None, null=True)),
                ('validation', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'mine_addition_factor',
            },
        ),
        migrations.CreateModel(
            name='MineGeologies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mg_code', models.CharField(max_length=15, unique=True)),
                ('mg_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mine_geologies',
            },
        ),
        migrations.CreateModel(
            name='mineProductions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_production', models.DateField(blank=True, default=None, null=True)),
                ('vendors', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('shift', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('loader', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('hauler', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('hauler_class', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('sources_area', models.BigIntegerField(blank=True, default=None, null=True)),
                ('loading_point', models.BigIntegerField(blank=True, default=None, null=True)),
                ('dumping_point', models.BigIntegerField(blank=True, default=None, null=True)),
                ('dome_id', models.BigIntegerField(blank=True, default=None, null=True)),
                ('distance', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('category_mine', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('time_dumping', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('time_loading', models.TimeField(blank=True, default=None, null=True)),
                ('left_loading', models.CharField(blank=True, default=None, max_length=2, null=True)),
                ('block_id', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('from_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('to_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('id_material', models.IntegerField(blank=True, default=None, null=True)),
                ('ritase', models.IntegerField(blank=True, default=None, null=True)),
                ('bcm', models.FloatField(blank=True, default=None, null=True)),
                ('tonnage', models.FloatField(blank=True, default=None, null=True)),
                ('remarks', models.TextField(blank=True, default=None, null=True)),
                ('hauler_type', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('ref_materials', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('no_production', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('task_id', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('left_date', models.IntegerField(blank=True, default=None, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'productions_mines',
            },
        ),
        migrations.CreateModel(
            name='mineQuickProductions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_production', models.DateField(blank=True, default=None, null=True)),
                ('vendors', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('shift', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('loader', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('hauler', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('hauler_class', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('sources', models.IntegerField(blank=True, default=None, null=True)),
                ('loading_point', models.IntegerField(blank=True, default=None, null=True)),
                ('dumping_point', models.IntegerField(blank=True, default=None, null=True)),
                ('dome_id', models.IntegerField(blank=True, default=None, null=True)),
                ('distance', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('category_mine', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('block_id', models.BigIntegerField(blank=True, default=None, null=True)),
                ('from_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('to_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('id_material', models.IntegerField(blank=True, default=None, null=True)),
                ('ritase', models.IntegerField(blank=True, default=None, null=True)),
                ('bcm', models.FloatField(blank=True, default=None, null=True)),
                ('tonnage', models.FloatField(blank=True, default=None, null=True)),
                ('time_loading', models.CharField(blank=True, default=None, max_length=2, null=True)),
                ('remarks', models.TextField(blank=True, default=None, null=True)),
                ('hauler_type', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('ref_materials', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('ref_plan_truck', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('task_id', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('no_production', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('left_date', models.IntegerField(blank=True, default=None, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'productions_quick_mines',
            },
        ),
        migrations.CreateModel(
            name='MineUnits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_code', models.CharField(max_length=25, unique=True)),
                ('unit_model', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('unit_type', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('id_category', models.IntegerField(blank=True, default=None, null=True)),
                ('id_vendor', models.IntegerField(blank=True, default=None, null=True)),
                ('supports', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mine_units',
            },
        ),
        migrations.CreateModel(
            name='OreClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ore_class', models.CharField(max_length=20, unique=True)),
                ('min_grade', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('max_grade', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ore_classes',
            },
        ),
        migrations.CreateModel(
            name='OreProductions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tgl_production', models.DateField(blank=True, default=None, null=True)),
                ('shift', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('id_prospect_area', models.IntegerField(blank=True, default=None, null=True)),
                ('id_block', models.BigIntegerField(blank=True, default=None, null=True)),
                ('from_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('to_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('id_material', models.IntegerField(blank=True, default=None, null=True)),
                ('grade_expect', models.FloatField(blank=True, default=None, null=True)),
                ('grade_control', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('unit_truck', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('id_stockpile', models.IntegerField(blank=True, default=None, null=True)),
                ('id_pile', models.IntegerField(blank=True, default=None, null=True)),
                ('batch_code', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('increment', models.IntegerField(blank=True, default=None, null=True)),
                ('batch_status', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('ritase', models.IntegerField(blank=True, default=None, null=True)),
                ('tonnage', models.FloatField(blank=True, default=None, null=True)),
                ('pile_status', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('kode_batch', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('pile_original', models.IntegerField(blank=True, default=None, null=True)),
                ('stockpile_ori', models.IntegerField(blank=True, default=None, null=True)),
                ('left_date', models.IntegerField(blank=True, default=None, null=True)),
                ('no_production', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('truck_factor', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('ore_class', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('batch_status_set', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('dome_compositing', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('stock_compositing', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('status_dome', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('sale_adjust', models.CharField(blank=True, default=None, max_length=5, null=True)),
                ('remarks', models.TextField(blank=True, default=None, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('status_approval', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ore_productions',
            },
        ),
        migrations.CreateModel(
            name='OreTruckFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_tf', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('reference_tf', models.CharField(max_length=150, unique=True)),
                ('material', models.IntegerField(blank=True, default=None, null=True)),
                ('density', models.FloatField(blank=True, default=None, null=True)),
                ('bcm', models.FloatField(blank=True, default=None, null=True)),
                ('ton', models.FloatField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ore_truck_factors',
            },
        ),
        migrations.CreateModel(
            name='OreTruckFactorAdjust',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_truck', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('sources', models.IntegerField(blank=True, default=None, null=True)),
                ('material', models.IntegerField(blank=True, default=None, null=True)),
                ('date_start', models.DateField(blank=True, default=None, null=True)),
                ('date_end', models.DateField(blank=True, default=None, null=True)),
                ('ton', models.FloatField(blank=True, default=None, null=True)),
                ('reference_tf', models.CharField(max_length=150)),
                ('status', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ore_truck_factors_adjust',
            },
        ),
        migrations.CreateModel(
            name='planProductions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_plan', models.DateField(blank=True, default=None, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('sources', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('vendors', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('topsoil', models.FloatField(blank=True, default=None, null=True)),
                ('ob', models.FloatField(blank=True, default=None, null=True)),
                ('lglo', models.FloatField(blank=True, default=None, null=True)),
                ('mglo', models.FloatField(blank=True, default=None, null=True)),
                ('hglo', models.FloatField(blank=True, default=None, null=True)),
                ('waste', models.FloatField(blank=True, default=None, null=True)),
                ('mws', models.FloatField(blank=True, default=None, null=True)),
                ('lgso', models.FloatField(blank=True, default=None, null=True)),
                ('uglo', models.FloatField(blank=True, default=None, null=True)),
                ('mgso', models.FloatField(blank=True, default=None, null=True)),
                ('hgso', models.FloatField(blank=True, default=None, null=True)),
                ('quarry', models.FloatField(blank=True, default=None, null=True)),
                ('ballast', models.FloatField(blank=True, default=None, null=True)),
                ('biomass', models.FloatField(blank=True, default=None, null=True)),
                ('ref_plan', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('task_id', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'plan_productions',
            },
        ),
        migrations.CreateModel(
            name='SampleMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_method', models.CharField(max_length=25, unique=True)),
                ('keterangan', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'sample_methods',
            },
        ),
        migrations.CreateModel(
            name='SampleProductions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tgl_sample', models.DateField(blank=True, default=None, null=True)),
                ('shift', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('id_type_sample', models.IntegerField(blank=True, default=None, null=True)),
                ('id_method', models.IntegerField(blank=True, default=None, null=True)),
                ('id_material', models.IntegerField(blank=True, default=None, null=True)),
                ('sampling_area', models.BigIntegerField(blank=True, default=None, null=True)),
                ('sampling_point', models.BigIntegerField(blank=True, default=None, null=True)),
                ('from_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('to_rl', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('batch_code', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('increments', models.IntegerField(blank=True, default=None, null=True)),
                ('fraction', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('size', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('sample_weight', models.FloatField(blank=True, default=None, null=True)),
                ('sample_number', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('remark', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('primer_raw', models.FloatField(blank=True, default=None, null=True)),
                ('duplicate_raw', models.FloatField(blank=True, default=None, null=True)),
                ('to_its', models.TimeField(blank=True, default=None, null=True)),
                ('unit_truck', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('kode_batch', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('selling_pulp', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('sampling_deskripsi', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('type', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('usage_status', models.CharField(blank=True, default=None, max_length=5, null=True)),
                ('pile_original', models.BigIntegerField(blank=True, default=None, null=True)),
                ('no_sample', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('sample_dup', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('no_input', models.BigIntegerField(blank=True, default=None, null=True)),
                ('left_date', models.IntegerField(blank=True, default=None, null=True)),
                ('discharge_area', models.BigIntegerField(blank=True, default=None, null=True)),
                ('product_code', models.BigIntegerField(blank=True, default=None, null=True)),
                ('gc_expect', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'samples_productions',
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_sample', models.CharField(max_length=25, unique=True)),
                ('keterangan', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'sample_types',
            },
        ),
        migrations.CreateModel(
            name='SellingOfficial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_surveyor', models.IntegerField(blank=True, default=None, null=True)),
                ('type_selling', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('tonnage', models.FloatField(blank=True, default=None, null=True)),
                ('id_factory', models.IntegerField(blank=True, default=None, null=True)),
                ('so_number', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('product_code', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('ni', models.FloatField(blank=True, default=None, null=True)),
                ('co', models.FloatField(blank=True, default=None, null=True)),
                ('al2o3', models.FloatField(blank=True, default=None, null=True)),
                ('cao', models.FloatField(blank=True, default=None, null=True)),
                ('cr2o3', models.FloatField(blank=True, default=None, null=True)),
                ('fe', models.FloatField(blank=True, default=None, null=True)),
                ('mgo', models.FloatField(blank=True, default=None, null=True)),
                ('sio2', models.FloatField(blank=True, default=None, null=True)),
                ('mno', models.FloatField(blank=True, default=None, null=True)),
                ('mc', models.FloatField(blank=True, default=None, null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('check_duplicated', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ore_sellings_official',
            },
        ),
        migrations.CreateModel(
            name='SellingPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plan_date', models.DateField(blank=True, default=None, null=True)),
                ('type_ore', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('type_selling', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('tonnage_plan', models.FloatField(blank=True, default=None, null=True)),
                ('ni_plan', models.FloatField(blank=True, default=None, null=True)),
                ('ni_buyer', models.FloatField(blank=True, default=None, null=True)),
                ('ni_surveyor', models.FloatField(blank=True, default=None, null=True)),
                ('check_duplicated', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('left_date', models.IntegerField(blank=True, default=None, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ore_sellings_plan',
            },
        ),
        migrations.CreateModel(
            name='SellingProductions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tgl_hauling', models.DateField(blank=True, default=None, null=True)),
                ('time_hauling', models.TimeField(blank=True, default=None, null=True)),
                ('shift', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('id_material', models.IntegerField(blank=True, default=None, null=True)),
                ('id_stockpile', models.IntegerField(blank=True, default=None, null=True)),
                ('id_pile', models.IntegerField(blank=True, default=None, null=True)),
                ('unit_code', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('empety_weigth', models.FloatField(blank=True, default=None, null=True)),
                ('fill_weigth', models.FloatField(blank=True, default=None, null=True)),
                ('netto_weigth', models.FloatField(blank=True, default=None, null=True)),
                ('qa_control', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('batch', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('delivery_order', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('nota', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('id_factory', models.IntegerField(blank=True, default=None, null=True)),
                ('type_selling', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('empety_weigth_f', models.FloatField(blank=True, default=None, null=True)),
                ('fill_weigth_f', models.FloatField(blank=True, default=None, null=True)),
                ('netto_weigth_f', models.FloatField(blank=True, default=None, null=True)),
                ('ore_transport', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('id_stock_temp', models.IntegerField(blank=True, default=None, null=True)),
                ('id_dome_temp', models.IntegerField(blank=True, default=None, null=True)),
                ('no_input', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('batch_g', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('kode_batch_g', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('left_date', models.IntegerField(blank=True, default=None, null=True)),
                ('new_awk', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('new_awk_sub', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('new_kode_batch_awk', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('new_batch_awk_pulp', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('awk_order', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('load_code', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('haulage_code', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('date_wb', models.DateField(blank=True, default=None, null=True)),
                ('timbang_isi', models.DateTimeField(blank=True, default=None, null=True)),
                ('timbang_kosong', models.DateTimeField(blank=True, default=None, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('sale_adjust', models.CharField(blank=True, default=None, max_length=5, null=True)),
                ('sale_dome', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ore_sellings',
            },
        ),
        migrations.CreateModel(
            name='SellingSurveyor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_surveyor', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('name_surveyor', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
            ],
            options={
                'db_table': 'ore_sellings_surveyor',
            },
        ),
        migrations.CreateModel(
            name='SourceMines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sources_area', models.CharField(max_length=50, unique=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mine_sources',
            },
        ),
        migrations.CreateModel(
            name='SourceMinesDome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pile_id', models.CharField(max_length=50, unique=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('compositing', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('dome_finish', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('status_dome', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('plan_ni_min', models.FloatField(blank=True, default=None, null=True)),
                ('plan_ni_max', models.FloatField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('direct_sale', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('id_dumping', models.BigIntegerField(blank=True, default=None, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mine_sources_point_dome',
            },
        ),
        migrations.CreateModel(
            name='SourceMinesDumping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dumping_point', models.CharField(max_length=50, unique=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('compositing', models.CharField(blank=True, default=None, max_length=5, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mine_sources_point_dumping',
            },
        ),
        migrations.CreateModel(
            name='stockpileMerge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockpile_ori', models.BigIntegerField(blank=True, default=None, null=True)),
                ('tonnage_primary', models.FloatField(blank=True, default=None, null=True)),
                ('stockpile_second', models.BigIntegerField(blank=True, default=None, null=True)),
                ('tonnage_second', models.FloatField(blank=True, default=None, null=True)),
                ('ref_id', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('remarks', models.TextField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'compositing_stockpiles',
            },
        ),
        migrations.CreateModel(
            name='taskImports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(default=None, max_length=255, null=True)),
                ('successful_imports', models.IntegerField(blank=True, default=0)),
                ('failed_imports', models.IntegerField(blank=True, default=0)),
                ('duplicate_imports', models.IntegerField(blank=True, default=0)),
                ('errors', models.TextField(blank=True, default=None, null=True)),
                ('duplicates', models.TextField(blank=True, default=None, null=True)),
                ('file_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('destination', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'task_imports',
            },
        ),
        migrations.CreateModel(
            name='unitsCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'units_categories',
            },
        ),
        migrations.CreateModel(
            name='UploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('upload_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], max_length=20)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_imports_log',
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'vendors',
            },
        ),
        migrations.CreateModel(
            name='volumeTruckFactorAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, default=None, null=True)),
                ('date_end', models.DateField(blank=True, default=None, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('vendors', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('sources', models.BigIntegerField(blank=True, default=None, null=True)),
                ('loading_point', models.BigIntegerField(blank=True, default=None, null=True)),
                ('type_truck', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('material', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('bcm_original', models.FloatField(blank=True, default=None, null=True)),
                ('ton_original', models.FloatField(blank=True, default=None, null=True)),
                ('bcm_updated', models.FloatField(blank=True, default=None, null=True)),
                ('ton_updated', models.FloatField(blank=True, default=None, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mine_volume_factors_adjustment',
            },
        ),
        migrations.CreateModel(
            name='Waybills',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tgl_deliver', models.DateField(blank=True, default=None, null=True)),
                ('delivery_time', models.TimeField(blank=True, default=None, null=True)),
                ('waybill_number', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('numb_sample', models.IntegerField(blank=True, default=None, null=True)),
                ('sample_id', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('mral_order', models.CharField(blank=True, default=None, max_length=5, null=True)),
                ('roa_order', models.CharField(blank=True, default=None, max_length=5, null=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('left_date', models.CharField(blank=True, default=None, max_length=2, null=True)),
                ('delivery', models.DateTimeField(blank=True, default=None, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'waybills',
            },
        ),
        migrations.CreateModel(
            name='WaybillsTemporary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sample_id', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('id_type_sample', models.BigIntegerField(blank=True, default=None, null=True)),
                ('id_method', models.BigIntegerField(blank=True, default=None, null=True)),
                ('id_material', models.IntegerField(blank=True, default=None, null=True)),
                ('sampling_area', models.BigIntegerField(blank=True, default=None, null=True)),
                ('sampling_point', models.BigIntegerField(blank=True, default=None, null=True)),
                ('batch_code', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('no_save', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('status_input', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('id_user', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'waybill_temps',
            },
        ),
        migrations.CreateModel(
            name='taskList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_slug', models.SlugField(max_length=255, unique=True)),
                ('type_table', models.CharField(default=None, max_length=150, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('allowed_groups', models.ManyToManyField(blank=True, related_name='allowed_tasks', to='auth.group')),
            ],
            options={
                'db_table': 'task_table_list',
            },
        ),
        migrations.CreateModel(
            name='StockpileBalance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('opening_balance', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('total_in', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('total_out', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('closing_balance', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kqms.material')),
                ('stockpile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kqms.sourceminesdumping')),
            ],
            options={
                'db_table': 'balance_stockpile',
            },
        ),
        migrations.CreateModel(
            name='SourceMinesLoading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loading_point', models.CharField(max_length=50, unique=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('status', models.IntegerField(blank=True, default=None, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('id_sources', models.ForeignKey(blank=True, db_column='id_sources', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mine_sources_point_loading_sources_FK', to='kqms.sourcemines')),
            ],
            options={
                'db_table': 'mine_sources_point_loading',
            },
        ),
        migrations.CreateModel(
            name='SampleTypeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_method', models.IntegerField(blank=True, default=None, null=True)),
                ('remakrs', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('id_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details_type_sample', to='kqms.sampletype')),
            ],
            options={
                'db_table': 'sample_type_details',
            },
        ),
        migrations.AddIndex(
            model_name='sampleproductions',
            index=models.Index(fields=['sample_number'], name='samples_pro_sample__8ca355_idx'),
        ),
        migrations.AddIndex(
            model_name='sampleproductions',
            index=models.Index(fields=['selling_pulp'], name='samples_pro_selling_9bd432_idx'),
        ),
        migrations.AddIndex(
            model_name='sampleproductions',
            index=models.Index(fields=['kode_batch'], name='samples_pro_kode_ba_7de700_idx'),
        ),
        migrations.AddIndex(
            model_name='sampleproductions',
            index=models.Index(fields=['gc_expect'], name='samples_pro_gc_expe_32f17b_idx'),
        ),
        migrations.AddIndex(
            model_name='oreproductions',
            index=models.Index(fields=['kode_batch'], name='ore_product_kode_ba_233c7f_idx'),
        ),
        migrations.AddField(
            model_name='oreclass',
            name='material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='kqms.material'),
        ),
        migrations.AddField(
            model_name='domebalance',
            name='dome',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kqms.sourceminesdome'),
        ),
        migrations.AddField(
            model_name='domebalance',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kqms.material'),
        ),
        migrations.AlterUniqueTogether(
            name='stockpilebalance',
            unique_together={('stockpile', 'material', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='domebalance',
            unique_together={('dome', 'material', 'date')},
        ),
    ]
